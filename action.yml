name: 'Robot Reporter'
description: 'Parses robot framework test reports and outputs the results in commit that triggered the tests'
author: 'joseajunior'
inputs:
  report_path:
    description: |
      Path to the report files.
      The default value is "reports"
    required: false
    default: "reports"
  gh_access_token:
    description: |
      Token to access the GitHub API.
      This is only needed if you want to post the report to the commit that triggered the tests.
    required: false
    default: ""
  sha:
    description: |
      SHA of the commit to post the report to.
      This is only needed if you want to post the report to the commit that triggered the tests.
    required: false
    default: ""
  webhook_url:
    description: |
      Google Chat webhook URL.
      This is only needed if you want to post the report to a Google Chat room.
    required: false
    default: ""
  only_summary:
    description: |
      Only output report to GitHub Actions Summary.
      Default is false.
    required: false
    default: false

runs:
  using: 'composite'
  steps:
    - shell: bash
      run: |
        export OWNER="$(echo "${{ github.repository }}" | awk -F / '{print $1}' | sed -e "s/:refs//")"
        export REPO="$(echo "${{ github.repository }}" | awk -F / '{print $2}' | sed -e "s/:refs//")"
        echo "REPOSITORY_OWNER=$OWNER" >> $GITHUB_ENV
        echo "REPOSITORY_NAME=$REPO" >> $GITHUB_ENV
        pip install -U pip
        pip install robotframework requests

    - shell: bash
      run: |
        python ${{ github.action_path }}/report.py -r ${{ inputs.report_path }}

    - shell: bash
      run: |
        cat report.md >> $GITHUB_STEP_SUMMARY
    
    - shell: bash
      if: ${{ !inputs.only_summary && ((inputs.sha && inputs.gh_access_token) || inputs.webhook_url) }}
      env:
        GITHUB_TOKEN: ${{ inputs.gh_access_token || 'none' }}
        WEBHOOK_URL: ${{ inputs.webhook_url || 'none' }}
        SHA: ${{ inputs.sha || 'none'}}

      run: |
        python ${{ github.action_path }}/post.py -gt ${{ env.GITHUB_TOKEN }} --webhook-url ${{ env.WEBHOOK_URL }} --sha ${{ env.SHA }}